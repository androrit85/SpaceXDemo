plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdk androidCompileSdkVersion

    defaultConfig {
        applicationId "com.spacexapidemo"
        minSdkVersion minimumSdkVersion
        targetSdk targetSdkVersion
        versionCode versionCode
        versionName versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", '"https://api.spacexdata.com/"')
        }
        debug {
            minifyEnabled false
            buildConfigField("String", "BASE_URL", '"https://api.spacexdata.com/"')
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$kotlinCore"
    implementation "androidx.appcompat:appcompat:$androidAppCompatVersion"
    implementation "com.google.android.material:material:$materialDesignVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$androidXNavigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$androidXNavigationVersion"

    //cardView
    implementation "androidx.cardview:cardview:$cardViewVersion"

    // recyclerview
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"

    //Swipe Refresh Layout
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'

    //Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // network
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    //glide library
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'
    kapt "android.arch.lifecycle:compiler:1.1.1"
    kapt 'com.github.bumptech.glide:compiler:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.12.0'

    //Room library
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation 'androidx.room:room-rxjava2:2.3.0'

    //Rx
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    // MPAndroidChart
    implementation "com.github.PhilJay:MPAndroidChart:$mpandroidchartVersion"
    //implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    //Sticky Header
    implementation "com.brandongogetap:stickyheaders:$stickyHeadersVersion"

    //Testing
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$junitExtVersion"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoKotlinVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "android.arch.core:core-testing:$coreTestingVersion"

}